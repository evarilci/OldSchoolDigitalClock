//
//  DotMatrixLabel.swift
//  neonWatch
//
//  Created by Eymen Varilci on 28.01.2025.
//

import SwiftUI


/// A label that displays text in a retro 5×7 dot-matrix style.
struct DotMatrixLabel: View {
    let text: String
    
    var body: some View {
        HStack(spacing: 3) {
            // For each character in the input text:
            ForEach(Array(text), id: \.self) { ch in
                // Convert to uppercase if you only have uppercase patterns:
                let upper = Character(String(ch).uppercased())
                
                // Lookup the 5×7 pattern for this character
                if let pattern = CharackterHelper.DotMatrixPatterns[upper] {
                    DotMatrixCharacterView(pattern: pattern)
                }
                else if ch == " " {
                    // For a space, you can either show an empty 5×7 or just a gap
                    Color.clear
                        .frame(width: 5 * 1, height: 7 * 1) // same size as a character
                }
                else {
                    // Unknown character => show a blank 5×7
                    DotMatrixCharacterView(pattern: CharackterHelper.blank5x7)
                }
            }
        }
        .padding(8)
        .background(Color.black)
        .clipShape(RoundedRectangle(cornerRadius: 12))
    }
}

/// Renders a **single character** with a 5×7 dot‑matrix pattern.
struct DotMatrixCharacterView: View {
    let pattern: [String]  // 7 rows, each 5 chars wide: "1" or "0"
    
    var body: some View {
        VStack(spacing: 0.5) {
            // For each of the 7 rows
            ForEach(0..<7, id: \.self) { row in
                HStack(spacing: 0.5) {
                    // For each of the 5 columns
                    ForEach(0..<5, id: \.self) { col in
                        let char = pattern[row][pattern[row].index(pattern[row].startIndex, offsetBy: col)]
                        // If '1', we light the pixel
                        if char == "1" {
                            Circle()
                                .fill(Globals.neonColor)
                                .frame(width: 1, height: 1) // dot size
                                .shadow(color: Globals.neonColor, radius: 0.5)
                        } else {
                            // Unlit pixel
                            Circle()
                                .fill(Color(uiColor: .darkGray.withAlphaComponent(0.3)))
                                .frame(width: 1, height: 1)
                        }
                    }
                }
            }
        }
    }
}

fileprivate struct CharackterHelper {
    fileprivate static let blank5x7 = [
        "00000",
        "00000",
        "00000",
        "00000",
        "00000",
        "00000",
        "00000"
    ]

    /// A dictionary mapping each character (A–Z, 0–9, punctuation) to a 5×7 bit pattern.
    /// Each entry is 7 strings, each 5 chars wide, '1' = pixel on, '0' = pixel off.
    /// Customize these patterns to get the look you want.
    fileprivate static let DotMatrixPatterns: [Character: [String]] = [
        // MARK: - Letters A–Z
        "A": [
            "01110",
            "10001",
            "10001",
            "11111",
            "10001",
            "10001",
            "10001"
        ],
        "B": [
            "11110",
            "10001",
            "10001",
            "11110",
            "10001",
            "10001",
            "11110"
        ],
        "C": [
            "01110",
            "10001",
            "10000",
            "10000",
            "10000",
            "10001",
            "01110"
        ],
        "D": [
            "11100",
            "10010",
            "10001",
            "10001",
            "10001",
            "10010",
            "11100"
        ],
        "E": [
            "11111",
            "10000",
            "10000",
            "11110",
            "10000",
            "10000",
            "11111"
        ],
        "F": [
            "11111",
            "10000",
            "10000",
            "11110",
            "10000",
            "10000",
            "10000"
        ],
        "G": [
            "01110",
            "10001",
            "10000",
            "10111",
            "10001",
            "10001",
            "01110"
        ],
        "H": [
            "10001",
            "10001",
            "10001",
            "11111",
            "10001",
            "10001",
            "10001"
        ],
        "I": [
            "01110",
            "00100",
            "00100",
            "00100",
            "00100",
            "00100",
            "01110"
        ],
        "J": [
            "00111",
            "00010",
            "00010",
            "00010",
            "10010",
            "10010",
            "01100"
        ],
        "K": [
            "10001",
            "10010",
            "10100",
            "11000",
            "10100",
            "10010",
            "10001"
        ],
        "L": [
            "10000",
            "10000",
            "10000",
            "10000",
            "10000",
            "10000",
            "11111"
        ],
        "M": [
            "10001",
            "11011",
            "10101",
            "10001",
            "10001",
            "10001",
            "10001"
        ],
        "N": [
            "10001",
            "11001",
            "10101",
            "10011",
            "10001",
            "10001",
            "10001"
        ],
        "O": [
            "01110",
            "10001",
            "10001",
            "10001",
            "10001",
            "10001",
            "01110"
        ],
        "P": [
            "11110",
            "10001",
            "10001",
            "11110",
            "10000",
            "10000",
            "10000"
        ],
        "Q": [
            "01110",
            "10001",
            "10001",
            "10001",
            "10001",
            "10010",
            "01101"
        ],
        "R": [
            "11110",
            "10001",
            "10001",
            "11110",
            "10100",
            "10010",
            "10001"
        ],
        "S": [
            "01110",
            "10001",
            "10000",
            "01110",
            "00001",
            "10001",
            "01110"
        ],
        "T": [
            "11111",
            "00100",
            "00100",
            "00100",
            "00100",
            "00100",
            "00100"
        ],
        "U": [
            "10001",
            "10001",
            "10001",
            "10001",
            "10001",
            "10001",
            "01110"
        ],
        "V": [
            "10001",
            "10001",
            "10001",
            "01010",
            "01010",
            "00100",
            "00100"
        ],
        "W": [
            "10001",
            "10001",
            "10001",
            "10101",
            "11011",
            "10001",
            "10001"
        ],
        "X": [
            "10001",
            "01010",
            "00100",
            "00100",
            "01010",
            "10001",
            "10001"
        ],
        "Y": [
            "10001",
            "10001",
            "10001",
            "01010",
            "00100",
            "00100",
            "00100"
        ],
        "Z": [
            "11111",
            "00001",
            "00010",
            "00100",
            "01000",
            "10000",
            "11111"
        ],
        
        // MARK: - Digits 0–9
        "0": [
            "01110",
            "10001",
            "10011",
            "10101",
            "11001",
            "10001",
            "01110"
        ],
        "1": [
            "00100",
            "01100",
            "00100",
            "00100",
            "00100",
            "00100",
            "01110"
        ],
        "2": [
            "01110",
            "10001",
            "00001",
            "00110",
            "01000",
            "10000",
            "11111"
        ],
        "3": [
            "01110",
            "10001",
            "00001",
            "00110",
            "00001",
            "10001",
            "01110"
        ],
        "4": [
            "10001",
            "10001",
            "10001",
            "11111",
            "00001",
            "00001",
            "00001"
        ],
        "5": [
            "11111",
            "10000",
            "11110",
            "00001",
            "00001",
            "10001",
            "01110"
        ],
        "6": [
            "01110",
            "10000",
            "11110",
            "10001",
            "10001",
            "10001",
            "01110"
        ],
        "7": [
            "11111",
            "00001",
            "00010",
            "00100",
            "01000",
            "01000",
            "01000"
        ],
        "8": [
            "01110",
            "10001",
            "10001",
            "01110",
            "10001",
            "10001",
            "01110"
        ],
        "9": [
            "01110",
            "10001",
            "10001",
            "01111",
            "00001",
            "00001",
            "01110"
        ],
        
        // MARK: - Punctuation
        "." : [
            "00000",
            "00000",
            "00000",
            "00000",
            "00000",
            "00100",
            "00100"
        ],
        "," : [
            "00000",
            "00000",
            "00000",
            "00000",
            "00000",
            "00100",
            "01000"
        ],
        ":" : [
            "00000",
            "00100",
            "00000",
            "00000",
            "00000",
            "00100",
            "00000"
        ],
        ";" : [
            "00000",
            "00100",
            "00000",
            "00000",
            "00000",
            "00100",
            "01000"
        ],
        "!" : [
            "00100",
            "00100",
            "00100",
            "00100",
            "00000",
            "00000",
            "00100"
        ],
        "?" : [
            "01110",
            "10001",
            "00001",
            "00110",
            "00000",
            "00100",
            "00000"
        ],
        "'" : [
            "00100",
            "00100",
            "00000",
            "00000",
            "00000",
            "00000",
            "00000"
        ],
        "\"" : [
            "01010",
            "01010",
            "00000",
            "00000",
            "00000",
            "00000",
            "00000"
        ],
        "-" : [
            "00000",
            "00000",
            "00000",
            "11111",
            "00000",
            "00000",
            "00000"
        ],
        "_" : [
            "00000",
            "00000",
            "00000",
            "00000",
            "00000",
            "00000",
            "11111"
        ],
        "=" : [
            "00000",
            "00000",
            "11111",
            "00000",
            "11111",
            "00000",
            "00000"
        ],
        "+" : [
            "00000",
            "00100",
            "00100",
            "11111",
            "00100",
            "00100",
            "00000"
        ],
        "*" : [
            "00000",
            "01010",
            "00100",
            "11111",
            "00100",
            "01010",
            "00000"
        ],
        "/" : [
            "00001",
            "00010",
            "00100",
            "01000",
            "10000",
            "00000",
            "00000"
        ],
        "\\" : [
            "10000",
            "01000",
            "00100",
            "00010",
            "00001",
            "00000",
            "00000"
        ],
        "(" : [
            "00010",
            "00100",
            "01000",
            "01000",
            "01000",
            "00100",
            "00010"
        ],
        ")" : [
            "01000",
            "00100",
            "00010",
            "00010",
            "00010",
            "00100",
            "01000"
        ],
        "[" : [
            "00110",
            "00100",
            "00100",
            "00100",
            "00100",
            "00100",
            "00110"
        ],
        "]" : [
            "01100",
            "00100",
            "00100",
            "00100",
            "00100",
            "00100",
            "01100"
        ],
        "{" : [
            "00010",
            "00100",
            "00100",
            "01000",
            "00100",
            "00100",
            "00010"
        ],
        "}" : [
            "01000",
            "00100",
            "00100",
            "00010",
            "00100",
            "00100",
            "01000"
        ],
        "^" : [
            "00100",
            "01010",
            "10001",
            "00000",
            "00000",
            "00000",
            "00000"
        ],
        "~" : [
            "00000",
            "00000",
            "01100",
            "11011",
            "00110",
            "00000",
            "00000"
        ],
        "°" : [
            "01000",
            "00000",
            "00000",
            "00000",
            "00000",
            "00000",
            "00000"
        ]
    ]
}

// A helper for an empty 5×7 pattern


struct DotMatrixLabel_Previews: PreviewProvider {
    static var previews: some View {
        VStack(spacing: 20) {
            DotMatrixLabel(text: "11")
            DotMatrixLabel(text: "asd")
        }
        .padding()
        .background(Color.black)
        .previewLayout(.sizeThatFits)
    }
}
